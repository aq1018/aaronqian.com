---
// Hero Section - Tech Lab meets Meditation Space
// Features: Digital analyzer with animated signal traces
import Icon from '@/components/primitives/Icon.astro'
import Badge from '@/components/primitives/Badge.astro'
import DigitalAnalyzer from '@/components/features/DigitalAnalyzer.astro'
import DigitalAnalyzerDecoderToggle from '@/components/features/DigitalAnalyzerDecoderToggle.astro'
import HeroContent from '@/components/patterns/HeroContent.astro'
import Collapsible from '@/components/primitives/Collapsible.astro'
import Button from '@/components/primitives/Button.astro'
import Heading from '@/components/primitives/Heading.astro'
import Text from '@/components/primitives/Text.astro'
import Stack from '@/components/primitives/Stack.astro'
---

<DigitalAnalyzer class="flex min-h-[85vh] items-center justify-center">
  <HeroContent eyebrow="Aaron Qian">
    <Stack slot="title">
      <Heading size="display-1" align="center" whitespace="nowrap">
        <Stack direction="row" align="center" justify="center" space="none">
          <span>Input coffee</span>
          <DigitalAnalyzerDecoderToggle
            target="secret-message"
            keyboardKey="k"
            keyboardModifier="cmd|ctrl"
          >
            <Button
              variant="link"
              color="primary"
              style="filter: brightness(0.7);"
              aria-label="Toggle secret message"
              type="button"
            >
              <Icon name="heroicons:bolt-solid" size="xl" />
            </Button>
          </DigitalAnalyzerDecoderToggle>
          <span>Output code</span>
        </Stack>
      </Heading>

      <Collapsible data-collapsible-id="secret-message">
        <Stack space="xs">
          <div
            id="ascii-display"
            class="text-center font-mono text-lg text-primary"
            aria-live="polite"
            aria-atomic="true"
          >
            <span id="ascii-text"></span>
            <span id="ascii-cursor" class="animate-cursor-blink">▊</span>
          </div>
          <div
            id="binary-display"
            class="text-center font-mono text-sm text-muted/70"
            aria-live="polite"
            aria-atomic="false"
          >
            <span id="binary-buffer"></span>
          </div>
        </Stack>
      </Collapsible>
    </Stack>

    <Stack slot="description" space="sm">
      <Text align="center" size="xl">
        Welcome to my lab: caffeine-fueled commits, circuit boards, and questionable 3D prints.
      </Text>
      <Text align="center" size="xl"> Safety goggles recommended. Coffee mandatory. </Text>
    </Stack>

    <Stack direction="row" space="sm" justify="center">
      <Button href="/blog" variant="solid" color="primary" size="lg">
        <span>Read My Notes →</span>
      </Button>

      <Button
        href="https://launchpath.com"
        color="accent"
        variant="outline"
        size="lg"
        external
        aria-label="Open LaunchPath (new tab)"
      >
        <span>LaunchPath →</span>
      </Button>
    </Stack>

    <!-- Micro-line in named slot - mt-8 since there are CTAs above -->
    <Text slot="microLine" as="div" align="center" class="text-muted/70">
      <span
        >Decoder controls: Click/Tap ⚡ or press <Badge
          color="neutral"
          size="xs"
          id="keyboard-shortcut">⌘K</Badge
        > to toggle.</span
      >
    </Text>
  </HeroContent>
</DigitalAnalyzer>

<style>
  /* Cursor blink for ASCII display at 0.8 Hz (1.25s period) */
  @keyframes cursorBlink {
    0%,
    50% {
      opacity: 1;
    }
    51%,
    100% {
      opacity: 0;
    }
  }

  .animate-cursor-blink {
    animation: cursorBlink 1.25s ease-in-out infinite;
  }

  /* Mono uppercase utility for CTAs */
  .text-mono-upper {
    font-family: var(--font-mono);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
</style>

<script>
  /**
   * Update keyboard shortcut badge display based on OS
   * Shows ⌘K on Mac, Ctrl+K on Windows/Linux
   */
  function updateKeyboardShortcutDisplay(): void {
    const isMac = navigator.userAgent.toUpperCase().includes('MAC')
    const shortcutDisplay = document.getElementById('keyboard-shortcut')
    if (shortcutDisplay !== null) {
      shortcutDisplay.textContent = isMac ? '⌘K' : 'Ctrl+K'
    }
  }

  // Initial setup
  updateKeyboardShortcutDisplay()

  // Update after View Transitions navigation
  document.addEventListener('astro:page-load', updateKeyboardShortcutDisplay)
</script>
