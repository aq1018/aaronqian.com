---
/**
 * HeroContent - Reusable hero section content layout
 * Provides standardized styling for hero sections across the site
 * Supports both props (simple) and slots (complex) for maximum flexibility
 */
import Stack from '../primitives/Stack.astro'

import Container from '@/components/primitives/Container.astro'
import Heading from '@/components/primitives/Heading.astro'
import Text from '@/components/primitives/Text.astro'
import { cn } from '@/lib/utils'

export interface Props {
  eyebrow?: string
  title?: string
  description?: string
  microLine?: string
  centered?: boolean
  width?: 'narrow' | 'default' | 'wide'
  class?: string
}

const {
  eyebrow,
  title,
  description,
  microLine,
  centered = true,
  width = 'default',
  class: className,
} = Astro.props

// Check which slots have content (slots take precedence over props)
const hasEyebrowSlot = Astro.slots.has('eyebrow')
const hasTitleSlot = Astro.slots.has('title')
const hasDescriptionSlot = Astro.slots.has('description')
const hasMicroLineSlot = Astro.slots.has('microLine')
---

<Container {width} class={cn('relative z-10 py-16', centered && 'text-center', className)}>
  <Stack space="lg">
    <!-- Eyebrow: slot takes precedence over prop -->
    {
      (hasEyebrowSlot || (eyebrow !== undefined && eyebrow !== '')) &&
        (hasEyebrowSlot ? (
          <slot name="eyebrow" />
        ) : (
          <Heading
            size="h6"
            color="primary"
            align={centered ? 'center' : undefined}
            transform="uppercase"
          >
            {eyebrow}
          </Heading>
        ))
    }

    <!-- Title: slot takes precedence over prop -->
    {
      (hasTitleSlot || (title !== undefined && title !== '')) &&
        (hasTitleSlot ? (
          <slot name="title" />
        ) : (
          <Heading size="h1" align={centered ? 'center' : undefined}>
            {title}
          </Heading>
        ))
    }

    <!-- Description: slot takes precedence over prop -->
    {
      (hasDescriptionSlot || (description !== undefined && description !== '')) &&
        (hasDescriptionSlot ? (
          <slot name="description" />
        ) : (
          <Text align={centered ? 'center' : undefined}>{description}</Text>
        ))
    }

    <!-- Default slot for custom content (buttons, collapsibles, etc.) -->
    <div>
      <slot />
    </div>

    <!-- Micro-line: slot takes precedence over prop - appears AFTER default slot -->
    <!-- Note: Use mt-4 when no default slot content, mt-8 when there are CTAs -->
    {
      (hasMicroLineSlot || (microLine !== undefined && microLine !== '')) &&
        (hasMicroLineSlot ? (
          <slot name="microLine" />
        ) : (
          <Text align={centered ? 'center' : undefined} class="text-muted/70">
            {microLine}
          </Text>
        ))
    }
  </Stack>
</Container>
