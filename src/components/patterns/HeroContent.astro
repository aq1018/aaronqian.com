---
/**
 * HeroContent - Reusable hero section content layout
 * Provides standardized styling for hero sections across the site
 * Supports both props (simple) and slots (complex) for maximum flexibility
 */
import { cn } from '@/lib/utils'
import Container from '@/components/primitives/Container.astro'
import Text from '@/components/primitives/Text.astro'
import Heading from '@/components/primitives/Heading.astro'

interface Props {
  eyebrow?: string
  title?: string
  description?: string
  microLine?: string
  centered?: boolean
  size?: 'narrow' | 'default' | 'wide'
  class?: string
}

const {
  eyebrow,
  title,
  description,
  microLine,
  centered = true,
  size = 'default',
  class: className,
} = Astro.props

// Check which slots have content (slots take precedence over props)
const hasEyebrowSlot = Astro.slots.has('eyebrow')
const hasTitleSlot = Astro.slots.has('title')
const hasDescriptionSlot = Astro.slots.has('description')
const hasMicroLineSlot = Astro.slots.has('microLine')
---

<Container {size} class={cn('relative z-10 py-16', centered && 'text-center', className)}>
  <!-- Eyebrow: slot takes precedence over prop -->
  {
    (hasEyebrowSlot || eyebrow) &&
      (hasEyebrowSlot ? (
        <slot name="eyebrow" />
      ) : (
        <Text color="primary" align={centered ? 'center' : undefined} class="mb-4 opacity-85">
          {eyebrow}
        </Text>
      ))
  }

  <!-- Title: slot takes precedence over prop -->
  {
    (hasTitleSlot || title) &&
      (hasTitleSlot ? (
        <slot name="title" />
      ) : (
        <Heading size="h1" align={centered ? 'center' : undefined}>
          {title}
        </Heading>
      ))
  }

  <!-- Description: slot takes precedence over prop -->
  {
    (hasDescriptionSlot || description) &&
      (hasDescriptionSlot ? (
        <slot name="description" />
      ) : (
        <Text align={centered ? 'center' : undefined} class="mx-auto mt-8 max-w-2xl">
          {description}
        </Text>
      ))
  }

  <!-- Default slot for custom content (buttons, collapsibles, etc.) -->
  <slot />

  <!-- Micro-line: slot takes precedence over prop - appears AFTER default slot -->
  <!-- Note: Use mt-4 when no default slot content, mt-8 when there are CTAs -->
  {
    (hasMicroLineSlot || microLine) &&
      (hasMicroLineSlot ? (
        <slot name="microLine" />
      ) : (
        <Text align={centered ? 'center' : undefined} class="mt-4 text-muted/70">
          {microLine}
        </Text>
      ))
  }
</Container>
