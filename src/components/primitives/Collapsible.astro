---
/**
 * Collapsible component - expandable/collapsible content section
 * Uses CVA for base styles and .hook.ts for behavior
 * State is controlled via data-open attribute + pure CSS Grid animation
 */
import type { HTMLAttributes } from 'astro/types'

import {
  type CollapsibleVariants,
  collapsibleContentVariants,
  collapsibleVariants,
} from './Collapsible.cva'

import { cn } from '@/lib/utils'

export interface Props extends HTMLAttributes<'div'>, CollapsibleVariants {
  open?: boolean
  class?: string
}

const { open = false, speed, bordered, class: className, ...rest } = Astro.props
---

<div
  class={cn(collapsibleVariants({ speed, bordered }), className)}
  data-collapsible
  data-open={String(open)}
  aria-expanded={open}
  {...rest}
>
  <div class={collapsibleContentVariants()}>
    <slot />
  </div>
</div>

<style is:global>
  /* Modern CSS Grid technique for smooth height transitions
   * Uses grid-template-rows: 0fr (collapsed) and 1fr (expanded)
   * Supported in Chrome 107+, Firefox 66+, Safari 16+ */

  /* Closed state - collapsed */
  .collapsible-wrapper[data-open='false'] {
    grid-template-rows: 0fr;
  }

  /* Open state - expanded */
  .collapsible-wrapper[data-open='true'] {
    grid-template-rows: 1fr;
  }
</style>
