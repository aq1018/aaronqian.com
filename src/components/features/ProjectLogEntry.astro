---
// ProjectLogEntry - Terminal-style log entry component
import type { CollectionEntry } from 'astro:content'
import Badge from '@/components/primitives/Badge.astro'
import Inline from '@/components/primitives/Inline.astro'
import Heading from '@/components/primitives/Heading.astro'
import Text from '@/components/primitives/Text.astro'

interface Props {
  log: CollectionEntry<'projectLogs'>
}

const { log } = Astro.props
const { Content } = await log.render()

// Format date as [YYYY-MM-DD HH:MM]
const formatTimestamp = (date: Date) => {
  const year = date.getFullYear()
  const month = String(date.getMonth() + 1).padStart(2, '0')
  const day = String(date.getDate()).padStart(2, '0')
  const hours = String(date.getHours()).padStart(2, '0')
  const minutes = String(date.getMinutes()).padStart(2, '0')
  return `${year}-${month}-${day} ${hours}:${minutes}`
}

// Tag color mappings for Badge component
const tagColorMap: Record<
  string,
  { color: 'primary' | 'danger' | 'info' | 'muted'; customClass?: string }
> = {
  milestone: { color: 'primary' },
  bug: { color: 'danger' },
  experiment: { color: 'info' },
  ux: { color: 'info' },
}

const getTagProps = (tag: string) => {
  return tagColorMap[tag.toLowerCase()] || { color: 'muted' }
}
---

<article class="group border-l-2 border-border/30 pl-6 transition-colors hover:border-primary/50">
  <!-- Timestamp and title -->
  <header class="mb-3">
    <Text as="time" class="text-muted/70" datetime={log.data.date.toISOString()}>
      [{formatTimestamp(log.data.date)}]
    </Text>
    <Heading size="h3" class="mt-1 text-lg">
      {log.data.title}
    </Heading>
  </header>

  <!-- Tags -->
  {
    log.data.tags.length > 0 && (
      <Inline space="xs" class="mb-4 flex-wrap">
        {log.data.tags.map((tag) => {
          const tagProps = getTagProps(tag)
          return (
            <Badge color={tagProps.color} size="xs" class={`px-2 ${tagProps.customClass || ''}`}>
              {tag}
            </Badge>
          )
        })}
      </Inline>
    )
  }

  <!-- Log content (markdown) -->
  <div
    class="prose prose-sm prose-invert max-w-none font-mono text-sm leading-relaxed text-muted prose-headings:font-mono prose-headings:text-content prose-p:text-muted prose-a:text-link prose-a:underline prose-a:decoration-transparent prose-a:transition-colors hover:prose-a:decoration-link prose-strong:text-content prose-code:rounded prose-code:bg-muted/10 prose-code:px-1 prose-code:py-0.5 prose-code:font-mono prose-code:text-primary prose-pre:bg-muted/10 prose-pre:text-content prose-ul:text-muted prose-ol:text-muted"
  >
    <Content />
  </div>
</article>
