---
/**
 * ProjectList - Reusable project listing component
 * Grid-based layout with column headers on desktop
 * Semantic ul/li markup with Sheet styling
 */
import type { CollectionEntry } from 'astro:content'
import Grid from '@/components/primitives/Grid.astro'
import Text from '@/components/primitives/Text.astro'
import Heading from '@/components/primitives/Heading.astro'
import Stack from '@/components/primitives/Stack.astro'
import ProjectListItem from './ProjectListItem.astro'

interface Props {
  projects: CollectionEntry<'projects'>[]
  statusStyles: Record<string, string>
  statusLabels: Record<string, string>
  showFooter?: boolean
}

const { projects, statusStyles, statusLabels, showFooter = true } = Astro.props
---

<Stack>
  <Grid spacing="md" class="hidden md:grid">
    <Grid size={4}>
      <Heading level="h3" size="h6" class="uppercase tracking-wider"> Project </Heading>
    </Grid>
    <Grid size={2}>
      <Heading level="h3" size="h6" class="text-right uppercase tracking-wider"> Status </Heading>
    </Grid>
    <Grid size={6}>
      <Heading level="h3" size="h6" class="uppercase tracking-wider"> Description </Heading>
    </Grid>
  </Grid>

  <!-- Projects list -->
  <ul class="flex flex-col gap-3">
    {
      projects.map((project) => (
        <ProjectListItem
          project={project}
          statusStyle={statusStyles[project.data.status]}
          statusLabel={statusLabels[project.data.status]}
        />
      ))
    }
  </ul>

  <!-- Footer -->
  {showFooter && <Text color="muted">Updates monthly. Expect context switches.</Text>}
</Stack>
