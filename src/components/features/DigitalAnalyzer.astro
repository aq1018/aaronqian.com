---
/**
 * Digital analyzer background component with dynamic sizing
 * Technical grid with animated signal traces
 * ViewBox and grid are calculated at runtime based on container dimensions
 */

import type { DigitalAnalyzerOptions } from './DigitalAnalyzer.types'

interface Props extends Partial<DigitalAnalyzerOptions> {
  /** Unique name for this analyzer instance (used to target buffers) */
  name: string
  class?: string
}

const { name, class: className } = Astro.props
---

<div class={`digital-analyzer h-full w-full ${className ?? ''}`} data-digital-analyzer={name}>
  <div class="relative h-full w-full">
    <!-- Static grid lines layer (viewBox set dynamically by JS) -->
    <svg
      class="digital-analyzer-static absolute inset-0 h-full w-full"
      preserveAspectRatio="none"
      style="pointer-events: none;"
    >
      <!-- Grid lines populated dynamically by JS -->
      <g stroke="currentColor" class="text-primary" fill="none"></g>
    </svg>

    <!-- Animated signal traces layer (viewBox and traces set dynamically by JS) -->
    <svg
      id="digital-analyzer-svg"
      class="digital-analyzer-traces absolute inset-0 h-full w-full"
      preserveAspectRatio="none"
      style="pointer-events: none;"
    >
      <!-- Traces added dynamically via hook -->
    </svg>
  </div>
</div>
